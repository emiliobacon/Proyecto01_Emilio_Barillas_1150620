<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnSync.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACUAAAAwCAYAAACWhbMrAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAVQ9AAFUPQHwUGZaAAAEbklE
        QVRYR83YW4hVVRjA8WN2ga4QTlln7lGUCVJkEWZREBRopUVkINSLRZA9RJQ99RBpD5Xmiw9BUC9BN6Ig
        oqKgHiKytCsVpZYUgdkNumhp//+eb51Z7NlnZpyzh+0HP2fOXp9rfbPPXmuvvVu9RLvdbg0MDGgRVvt7
        4xEFDeINPNx4UVFQP17GQWzwWGPh4GjjJVhQs0U5ME7F80gFNVeUg+JkPI0DaLYoB8SJ2IL/kBek13Ab
        bsSFOAVHIXqoOewYJ+Bx/ItyQTnbf8WneBYuFX0o+qklUme4B1MVVGU/3sMtOAnRcw9hJ+ECbEfVwNOx
        D69gUX9/f2toaChGmGHQUXIJvkLVoD/gs/j5dxyr8gmuxhzECDMMOwhXYAfKgz2GeTgTy7ARX6M8S/Uj
        rkXRZ08xODjY8tTT0XJ8j3ygzpLgT3gmzsA6fIc8V7twJXovLHWCa+BXlQaZsE75OVyMd5AXpQ/grSr+
        RylswFx4+5jrWekW5nLGPBM3IBVWuXjaj8fhjTvdJ3OP4EjE/8jCgzgHb2NZ6qxb2DY6OupP16E/MOku
        wTaMwuUhL+pnXI7IjPBAeBAmer14sRbHu0W0e3bvgNdOtEyMyJXX0R7khT0J+4lswg/wJrsVKdGp7+Yt
        sqrDdhyN9mRfuRG5Dv4o8qKcCH5LkUn4ASvwD1Kit4qliKx6wv5wNpx9eWF3YTwprp9N0Zi8heMxllhT
        2B+8UXtfzMd7AWM3cP+Bg5en7EMo1qW6w37hjiIfz8vldHQSnK75Ku1N1K8zuqk37BcXwUskjenvi9FJ
        8Gb7C/IE90TRTb1hvxhCfl15vyxW+JRwGf5ESnBJGEF0U2/YL5ztnyON6cbxJnQtyik620XNxxfIi1qF
        TsJh+fUdlhd6E0vC7TFO8iXGl4RYPDcjT3LxPA7RVT1hf6haPJ/D+NOPv+B6uI9OSV5jl2IsqaawP3ib
        KW/87kRkEX6As+Ej5InP4FhEZnXEmXYfNmWu7XBmv480zk6chcgi/BDWIy/KZeJmFO3dItrX4n4cM1lu
        2qfBizo9HT2BIxBZER7AAnyLvDDXEpeMIqcqou0+OK3vRvVOMsK24Ax8F66T0ZqFB+OvqHro9FQvdCaa
        Uw7adG/k/g7P2nQK8+y4HLkfi5ZSRKIvMF5FXpQ+xlWYcJr9jFSUfoNTfuJXcqjR19eXBnDH+SHyovQT
        vO7O5Yx1tq/+RF6U9uJW1PrQuQTfIB8o8YbtxenTjNehLzAeQDnPP2LlyMhI0WdPYQfDw8OpsPLTR851
        zYGdDOWH02Q3fEasp7DgU+5T+AtVg06HBS9Py0HPYSfwduOK/zpmWtxmZu+kM/KQwtc2dgbfL10HXy+6
        +nsxu6OoKiLxBYf3udMQPdYcdgz/YpeO87ESa/AiqoryDfLsFdQtHBDlJUG+JOv+AmM2w0FRLupNzNqW
        espwYORFuWEs7vo9v0acaTg4UlG+jyjeQaixiAJ867IN58XnaG0oYlH0ma3YqfZWUKv1PxrpqTtBfzPW
        AAAAAElFTkSuQmCC
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATsQADUu5DlhMvA6aS7sPy0u7
        D+tLuw/7S7sP+0u7D+tLvA/LTLwOmku8DlhOxAANAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAS7sPIky7DppLvA/0TLwQ/0y8
        EP9MvBD/TLwQ/0y8EP9MvBD/TLwQ/0y8EP9MvBD/TLwQ/0u8D/RMvA6aS7sPIgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAASLYAB0u8D4dLuw/5TLwQ/0y8
        EP9MvBD/TLwQ/0y8EP9MvBD/TLwQ/0y8EP9MvBD/TLwQ/0y8EP9MvBD/TLwQ/0y8EP9Luw/5S7wPh0i2
        AAcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEe/DyBLuxDPTLwQ/0y8
        EP9MvBD/TLwQ/0y8EP9MvBD/TLwQ/0y8EP9MvBD/TLwQ/0y8EP9MvBD/TLwQ/0y8EP9MvBD/TLwQ/0y8
        EP9MvBD/S7wQz0e/DyAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABLvwssTLsP50y8
        EP9MvBD/TLwQ/0y8EP9MvBD/TLwQ/0y8EP9MvBD/TLwQ/0y8EP9MvBD/TLwQ/0y8EP9MvBD/TLwQ/0y8
        EP9MvBD/TLwQ/0y8EP9MvBD/TLsP50m7Cy0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAR78PIEy7
        D+dMvBD/TLwQ/0y8EP9MvBD/TLwQ/0y8EP9MvBD/TLwQ/0y8EP9MvBD/TLwQ/0y8EP9MvBD/TLwQ/0y8
        EP9MvBD/TLwQ/0y8EP9MvBD/TLwQ/0y8EP9MvBD/TLsP50e/DyAAAAAAAAAAAAAAAAAAAAAAAAAAAEi2
        AAdLuxDPTLwQ/0y8EP9MvBD/TLwQ/0y8EP9MvBD/TLwQ/0y8EP9MvBD/TLwQ/0y8EP9MvBD/TLwQ/0y8
        EP9MvBD/TLwQ/0y8EP9MvBD/TLwQ/0y8EP9MvBD/TLwQ/0y8EP9MvBD/S7wQz0i2AAcAAAAAAAAAAAAA
        AAAAAAAAS7sPh0y8EP9MvBD/TLwQ/0y8EP9MvBD/TLwQ/0y8EP9MvBD/TLwQ/0y8EP9MvBD/TLwQ/0y8
        EP9MvBD/TLwQ/0y8EP9MvBD/TLwQ/0y8EP9MvBD/TLwQ/0y8EP9MvBD/TLwQ/0y8EP9MvBD/S7wPhwAA
        AAAAAAAAAAAAAEu7DyJLuw/5TLwQ/0y8EP9MvBD/TLwQ/0y8EP9MvBD/TLwQ/0y8EP9MvBD/TLwQ/0y8
        EP9MvBD/TLwQ/0y8EP9MvBD/TLwQ/0y8EP9MvBD/S7sP1Eq7D3FLuw/hTLwQ/0y8EP9MvBD/TLwQ/0y8
        EP9Luw/5S7sPIgAAAAAAAAAATLsOmky8EP9MvBD/TLwQ/0y8EP9MvBD/TLwQ/0y8EP9MvBD/TLwQ/0y8
        EP9MvBD/TLwQ/0y8EP9MvBD/TLwQ/0y8EP9Luw/+S7sPxUy7DloAqgADAAAAAEq7Do9MvBD/TLwQ/0y8
        EP9MvBD/TLwQ/0y8EP9MvA6aAAAAAE6wAA1LvA/0TLwQ/0y8EP9MvBD/TLwQ/0y8D91GuAgdS7kPM0m6
        D2RLuw6LS7sPqUu7DrxLvA/DSroOv0u7Dq1Kuw6MSrwNXEu8CRsAAAAAAAAAAD+/AAxKvA5+S7sP9ky8
        EP9MvBD/TLwQ/0y8EP9MvBD/TLwQ/0u8D/ROxAANTLsOV0y8EP9MvBD/TLwQ/0y8EP9MvBD/S7sP1Tqw
        AA0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEm7Cy1Kuw6JS7wP7Ey8
        EP9MvBD/TLwQ/0y8EP9MvBD/TLwQ/0y8EP9MvBD/TLwQ/0u8DlhMuw6aTLwQ/0y8EP9MvBD/TLwQ/0y8
        EP9MvBD/S7wP9ku7D8hLuw6cS7sOeUu7DV9LvQ1OSbwNSUu6DU5Luw1fTL0OfEu6D6hLvA/hTLwQ/0y8
        EP9MvBD/TLwQ/0u8D+VMuw/CS7sQ/ky8EP9MvBD/TLwQ/0y8EP9MvBD/TLwOmku7D8tMvBD/TLwQ/0y8
        EP9MvBD/TLwQ/0y8EP9MvBD/TLwQ/0y8EP9MvBD/TLwQ/0y8EP9MvBD/TLwQ/0y8EP9MvBD/TLwQ/0y8
        EP9MvBD/TLwQ/0u8D+lLvA56TMwACgAAAABLuw+mTLwQ/0y8EP9MvBD/TLwQ/0y8EP9LvA/LS7sP60y8
        EP9MvBD/TLwQ/0y8EP9MvBD/S7wP6Uu8D7dMvA/uTLwQ/0y8EP9MvBD/TLwQ/0y8EP9MvBD/TLwQ/0y8
        EP9MvBD/S7sP6ku7D6ZJuw9TVdQABgAAAAAAAAAAP78ABEu8D7dMvBD/TLwQ/0y8EP9MvBD/TLwQ/0u7
        D+tLuw/7TLwQ/0y8EP9MvBD/TLwQ/0y8EP9LvA42AAAAAAD/AAJLuQssTLsOV0q6D3RLuw+ES7sPiEu7
        D4BKuw5tS7oNTki9DiMAAAAAAAAAAAAAAAAAAAAAAP8AAUm7D1NLvA/WTLwQ/0y8EP9MvBD/TLwQ/0y8
        EP9MvBD/S7sP+0u7D/tMvBD/TLwQ/0y8EP9MvBD/TLwQ/0y7DlcAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAASL0OI0u7DnlLvA/bTLwQ/0y8EP9MvBD/TLwQ/0y8
        EP9MvBD/TLwQ/0y8EP9Luw/7S7sP60y8EP9MvBD/TLwQ/0y8EP9MvBD/S7sP/kq7D9BLvA+RSrwPYEi7
        DDxLuw8iTL8MFEu0DxFKvwoYSroMKUm8DkVMvA5rSroOnUq7D9pLuw/+TLwQ/0y8EP9MvBD/TLwQ/0y8
        EL9Luw6bS7sP8Uy8EP9MvBD/TLwQ/0u7D+tLuw/LTLwQ/0y8EP9MvBD/TLwQ/0y8EP9MvBD/TLwQ/0y8
        EP9MvBD/TLwQ/0y8EP9MvBD/TLwQ/0y8EP9MvBD/TLwQ/0y8EP9MvBD/TLwQ/0y8EP9MvBD/S7sP/Ey7
        D7VKvA9BAAAAAAAAAABKvA9gTLwQ/0y8EP9MvBD/S7wPy0y7DppMvBD/TLwQ/0y8EP9MvBD/S7wP20u8
        D5FLuw/ETLwP+Ey8EP9MvBD/TLwQ/0y8EP9MvBD/TLwQ/0y8EP9MvBD/TLwQ/0y8EP9Luw/nS7wOrUu7
        DmlEugkaAAAAAAAAAAAAAAAAAAAAAEu8EG9MvBD/TLwQ/0y8EP9Luw6bTLsOV0y8EP9MvBD/TLwQ/0u7
        D/5LvAkbAAAAAAAAAABItgAHSLwLLkq7EE9KvA5nTLsPdUq6DntLvA93S7oObEu8DlhIuww8RbkLFgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAEi2AA5Kug+CS7sP90y8EP9MvBD/TLwQ/0q9DllOsAANS7wP9Ey8
        EP9MvBD/S7sP/ka4CB0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAEi8Cy5LvA6OS7wP8Ey8EP9MvBD/TLwQ/0y8EP9LvA/1SLYADgAA
        AABKuw6aTLwQ/0y8EP9MvBD/TLwP2ku8D3dKuA06TLIACgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAB/AAJGuA4kSbsOV0u7D5RLuw/bTLwQ/0y8EP9MvBD/TLwQ/0y8EP9MvBD/TLwQ/0q8
        Dp0AAAAAAAAAAEu7DyJLuw/5TLwQ/0y8EP9MvBD/TLwQ/0y8EP9Luw/9S7wP4Uu8D8RLvA+wS7sPo0u8
        Dp5Luw+iS7wOrEu7Dr5LvA/XS7sP90y8EP9MvBD/TLwQ/0y8EP9MvBD/TLwQ/0y8EP9MvBD/TLwQ/0y8
        EP9Luw/6S7oNJQAAAAAAAAAAAAAAAEu7D4dMvBD/TLwQ/0y8EP9MvBD/TLwQ/0y8EP9MvBD/TLwQ/0y8
        EP9MvBD/TLwQ/0y8EP9MvBD/TLwQ/0y8EP9MvBD/TLwQ/0y8EP9MvBD/TLwQ/0y8EP9MvBD/TLwQ/0y8
        EP9MvBD/TLwQ/0q7DowAAAAAAAAAAAAAAAAAAAAASLYAB0u7EM9MvBD/TLwQ/0y8EP9MvBD/TLwQ/0y8
        EP9MvBD/TLwQ/0y8EP9MvBD/TLwQ/0y8EP9MvBD/TLwQ/0y8EP9MvBD/TLwQ/0y8EP9MvBD/TLwQ/0y8
        EP9MvBD/TLwQ/0y8EP9MvA/TOKoACQAAAAAAAAAAAAAAAAAAAAAAAAAAR78PIEy7D+dMvBD/TLwQ/0y8
        EP9MvBD/TLwQ/0y8EP9MvBD/TLwQ/0y8EP9MvBD/TLwQ/0y8EP9MvBD/TLwQ/0y8EP9MvBD/TLwQ/0y8
        EP9MvBD/TLwQ/0y8EP9MvBD/S7sP60a/DiQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAS78LLEy7
        D+dMvBD/TLwQ/0y8EP9MvBD/TLwQ/0y8EP9MvBD/TLwQ/0y8EP9MvBD/TLwQ/0y8EP9MvBD/TLwQ/0y8
        EP9MvBD/TLwQ/0y8EP9MvBD/TLwQ/0y8D+pIuw8xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAR78PIEu7EM9MvBD/TLwQ/0y8EP9MvBD/TLwQ/0y8EP9MvBD/TLwQ/0y8EP9MvBD/TLwQ/0y8
        EP9MvBD/TLwQ/0y8EP9MvBD/TLwQ/0y8EP9Luw/URr8OJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAASLYAB0u7D4dLuw/5TLwQ/0y8EP9MvBD/TLwQ/0y8EP9MvBD/TLwQ/0y8
        EP9MvBD/TLwQ/0y8EP9MvBD/TLwQ/0y8EP9Luw/6S7wOjTjGAAkAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEu7DyJKuw6aS7wP9Ey8EP9MvBD/TLwQ/0y8
        EP9MvBD/TLwQ/0y8EP9MvBD/TLwQ/0y8EP9Luw/2S7sOnkm7DSYAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABOsAANTLsOV0y7
        DppLuw/LS7sP60u7D/tLuw/7S7sP60u8D8tLuw6bSbsOWkS7AA8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/8AD//8AAP/8AAA/+AAAH/AAAA/gAAAHwAAAA8AAAAOAAAABgAACAQAA
        GAAA/+AAAAAAAAAAAIAAAAMAAQA8AAH/8AAAAAAAAAAAYAAAAeADAB+AA//+AIB/wAGAAAABwAAAA8AA
        AAPgAAAH8AAAD/gAAB/8AAA//wAA///AA/8=
</value>
  </data>
</root>